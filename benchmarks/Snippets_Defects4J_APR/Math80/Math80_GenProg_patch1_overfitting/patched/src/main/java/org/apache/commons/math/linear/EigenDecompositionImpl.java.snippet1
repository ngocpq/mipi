/**
     * Flip qd array if warranted.
     * @param n number of rows in the block
     * @param step within the array (1 for flipping all elements, 2 for flipping
     * only every other element)
     * @return true if qd array was flipped
     */
    private boolean flipIfWarranted(final int n, final int step) {
        if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
            // flip array
            int j = 4 * n - 1;
            for (int i = 0; i < j; i += 4) {
                if (tType < -22) {
                    tau = 0.0;
                } else if (dMin1 > 0.0) {
                    tau = (tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
                    tType -= 11;
                } else {
                    tau *= 0.25;
                    tType -= 12;
                }
                j -= 4;
            }
            return true;
        }
        return false;
    }